Search.setIndex({
    "docnames": ["index", "microtool_api/microtool", "microtool_api/microtool.gradient_sampling", "microtool_api/microtool.monte_carlo", "microtool_api/microtool.optimize", "microtool_api/microtool.utils", "microtool_api/modules", "modindex"],
    "filenames": ["index.rst", "microtool_api\\microtool.rst", "microtool_api\\microtool.gradient_sampling.rst", "microtool_api\\microtool.monte_carlo.rst", "microtool_api\\microtool.optimize.rst", "microtool_api\\microtool.utils.rst", "microtool_api\\modules.rst", "modindex.rst"],
    "titles": ["Welcome to MICROtool\u2019s documentation!", "microtool package", "microtool.gradient_sampling package", "microtool.monte_carlo package", "microtool.optimize package", "microtool.utils package", "microtool", "microtool"],
    "terms": {
        "index": [0, 1, 3],
        "modul": [0, 6],
        "search": 0,
        "page": 0,
        "gradient_sampl": [1, 6],
        "shell_electrostat": [1, 6],
        "cost_inter_shel": [1, 2],
        "cost_intra_shel": [1, 2],
        "cost_scipi": [1, 2],
        "repack_shel": [1, 2],
        "sample_shells_electrostat": [1, 2],
        "test_shel": [1, 2],
        "shell_rigid_rot": [1, 6],
        "main": [1, 2, 3, 5],
        "rotate_shel": [1, 2],
        "rotate_vector": [1, 2],
        "sample_shells_rot": [1, 2],
        "verify_rot": [1, 2],
        "uniform": [1, 6],
        "cost_fun": [1, 2, 4],
        "sample_uniform": [1, 2],
        "test_uniform": [1, 2],
        "util": [1, 6],
        "angles_to_unitvector": [1, 2],
        "constraint_funct": [1, 2],
        "get_constraint": [1, 2],
        "make_spher": [1, 2],
        "normal": [1, 2],
        "plot_shel": [1, 2],
        "plot_shells_project": [1, 2],
        "plot_vector": [1, 2],
        "sample_sphere_angl": [1, 2],
        "sample_sphere_vector": [1, 2],
        "total_potenti": [1, 2],
        "unitvector_to_angl": [1, 2],
        "monte_carlo": [1, 6],
        "io": [1, 6],
        "make_result_dir": [1, 3],
        "parameter_distribut": [1, 6],
        "fit_gaussian": [1, 3],
        "plot_dataframe_index": [1, 3],
        "plot_parameter_distribut": [1, 3],
        "scale": [1, 2, 3, 4, 5, 6],
        "simul": [1, 6],
        "montecarlosimul": [1, 3],
        "run": [1, 3],
        "save": [1, 3],
        "set_fitting_opt": [1, 3],
        "set_model": [1, 3],
        "set_n_sim": [1, 3],
        "set_noise_distribut": [1, 3],
        "set_schem": [1, 3],
        "optim": [1, 2, 5, 6],
        "loss_funct": [1, 5, 6],
        "crlbbase": [1, 4],
        "compute_crlb": [1, 4],
        "crlbeigenvalu": [1, 4, 5],
        "crlbinvers": [1, 4],
        "lossfunct": [1, 4, 5],
        "compute_loss": [1, 4, 5],
        "fisher_information_gauss": [1, 4],
        "fisher_information_ric": [1, 4],
        "scipy_loss": [1, 4],
        "method": [1, 6],
        "bruteforc": [1, 4],
        "popul": [1, 4],
        "migrat": [1, 4],
        "soma": [1, 4],
        "is_constrain": [1, 4],
        "bounds_tuple2scipi": [1, 4],
        "check_degrees_of_freedom": [1, 4],
        "check_ill_condit": [1, 4],
        "check_insensit": [1, 4],
        "optimize_schem": [1, 4],
        "warn_early_termin": [1, 4],
        "cartesian_product": [1, 4],
        "diagon": [1, 4],
        "hiddenprint": [1, 5],
        "get_pickl": [1, 5],
        "save_pickl": [1, 5],
        "plot": [1, 2, 3, 6],
        "lossinspector": [1, 5],
        "plot_acquisition_paramet": [1, 5],
        "plot_sign": [1, 5],
        "saved_model": [1, 6],
        "cylinder_zeppelin": [1, 5],
        "cylinder_zeppelin_nak": [1, 5],
        "stick": [1, 5],
        "stick_nak": [1, 5],
        "stick_zeppelin": [1, 5],
        "verdict": [1, 5],
        "saved_schem": [1, 6],
        "alexander2008": [1, 5],
        "alexander2008_optimized_direct": [1, 5],
        "ir_scheme_increasing_paramet": [1, 5],
        "ir_scheme_repeated_paramet": [1, 5],
        "solve_echo_tim": [1, 6],
        "compute_delta_max": [1, 5],
        "echo_tim": [1, 5, 6],
        "largest_real_cbrt": [1, 5],
        "minimal_echo_tim": [1, 5],
        "class": [1, 3, 4, 5],
        "acquisitionparamet": [1, 6],
        "valu": [1, 2, 4, 5, 6],
        "ndarrai": [1, 2, 4, 5],
        "unit": [1, 2],
        "str": [1, 2, 3, 4, 5],
        "float": [1, 2, 4, 5],
        "symbol": [1, 3],
        "none": [1, 2, 3, 4, 5],
        "lower_bound": 1,
        "0": [1, 2, 4, 5],
        "upper_bound": 1,
        "fix": 1,
        "bool": [1, 4],
        "fals": 1,
        "base": [1, 2, 3, 4, 5],
        "object": [1, 3, 4, 5],
        "defin": [1, 2, 4, 5],
        "seri": 1,
        "n": [1, 2, 4],
        "mr": [1, 4],
        "acquisit": [1, 3, 4, 5],
        "paramet": [1, 2, 3, 4, 5, 6],
        "b": [1, 2, 5],
        "A": [1, 2, 3, 4, 5],
        "numpi": [1, 2],
        "arrai": [1, 2, 4],
        "The": [1, 2, 3, 4, 5],
        "string": [1, 3],
        "e": 1,
        "g": 1,
        "": [1, 5],
        "mm\u00b2": 1,
        "typic": 1,
        "order": [1, 4],
        "magnitud": 1,
        "us": [1, 2, 3, 4, 5],
        "type": [1, 2, 4],
        "set": [1, 2, 4],
        "lower": [1, 4],
        "constraint": [1, 2, 4, 6],
        "i": [1, 2, 3, 4],
        "specifi": 1,
        "bound": [1, 4, 5],
        "default": 1,
        "upper": 1,
        "boolean": [1, 4],
        "indic": 1,
        "consid": 1,
        "properti": 1,
        "free_valu": [1, 6],
        "optimize_mask": [1, 6],
        "set_fixed_mask": [1, 6],
        "fixed_mask": 1,
        "measur": [1, 4],
        "you": [1, 2, 3, 4, 5],
        "wish": [1, 2, 3, 4, 5],
        "stai": 1,
        "dure": [1, 3],
        "thi": [1, 2, 3, 4, 5],
        "np": [1, 4],
        "evalu": 1,
        "true": [1, 3, 4],
        "need": 1,
        "set_free_valu": [1, 6],
        "new_valu": 1,
        "chang": [1, 4],
        "onli": 1,
        "should": [1, 2, 4],
        "optimis": 1,
        "assign": 1,
        "acquisitionschem": [1, 3, 4, 5, 6],
        "dict": [1, 2, 3, 4, 5],
        "abc": [1, 4],
        "scheme": [1, 2, 3, 4, 5],
        "dictionari": [1, 3, 4, 5],
        "try": 1,
        "bid": 1,
        "nomenclatur": 1,
        "kei": [1, 5],
        "rais": [1, 2, 5],
        "valueerror": [1, 2, 5],
        "list": [1, 2, 4, 5],
        "have": 1,
        "unequ": 1,
        "length": [1, 2],
        "abstract": [1, 4],
        "linearconstraint": 1,
        "nonlinearconstraint": 1,
        "return": [1, 2, 3, 4, 5],
        "implement": [1, 4],
        "child": 1,
        "specif": [1, 4],
        "scipi": [1, 2, 4],
        "lb": 1,
        "x": [1, 2, 4, 5],
        "ub": 1,
        "being": [1, 2],
        "matrix": [1, 4],
        "relat": 1,
        "between": [1, 2, 4],
        "free_parameter_bounds_sc": [1, 6],
        "tupl": [1, 2, 3, 4, 5],
        "free": [1, 4, 5],
        "divid": [1, 4],
        "min": 1,
        "max": 1,
        "pair": [1, 2],
        "free_parameter_kei": [1, 6],
        "function": [1, 2, 3, 4, 5],
        "extract": 1,
        "same": [1, 4],
        "free_paramet": [1, 6],
        "free_parameter_scal": [1, 6],
        "getter": 1,
        "repeat": 1,
        "number": [1, 2, 4, 5],
        "puls": [1, 5],
        "free_parameter_vector": [1, 6],
        "all": [1, 2, 3, 4, 5],
        "flatten": [1, 2],
        "vector": [1, 2, 4],
        "name": [1, 3, 5],
        "contain": [1, 2, 3, 5],
        "tissueparamet": [1, 3, 6],
        "get_free_parameter_idx": [1, 6],
        "pulse_id": 1,
        "int": [1, 2, 3, 4, 5],
        "allow": [1, 2, 5],
        "get": 1,
        "combin": [1, 4],
        "param": [1, 2, 3, 4, 5],
        "which": [1, 3, 4, 5],
        "get_parameter_from_parameter_vector": [1, 6],
        "help": 1,
        "from": [1, 2, 3],
        "useful": 1,
        "build": [1, 5],
        "Be": 1,
        "warn": 1,
        "doe": [1, 5],
        "check": [1, 4],
        "requir": 1,
        "actual": [1, 4],
        "rescal": [1, 3],
        "so": [1, 4, 5],
        "now": 1,
        "physic": 1,
        "pulse_count": [1, 6],
        "set_free_parameter_bound": [1, 6],
        "setter": 1,
        "provid": [1, 4],
        "sequenc": 1,
        "attribut": 1,
        "set_free_parameter_vector": [1, 6],
        "infer": 1,
        "desir": [1, 2, 4],
        "shape": [1, 2, 4, 5],
        "inform": [1, 4],
        "diffusionacquisitionschem": [1, 6],
        "b_valu": [1, 6],
        "b_vector": [1, 6],
        "pulse_width": [1, 6],
        "pulse_interv": [1, 6],
        "scan_paramet": 1,
        "scannerparamet": [1, 5, 6],
        "t_90": [1, 6],
        "4": [1, 4],
        "t_180": [1, 6],
        "6": 1,
        "t_half": [1, 6],
        "14": 1,
        "g_max": [1, 6],
        "2": [1, 2, 5],
        "s_max": [1, 6],
        "1": [1, 4, 5],
        "3": [1, 2, 4, 5],
        "diffus": 1,
        "pgse": 1,
        "direct": 1,
        "cosin": 1,
        "width": 1,
        "\u03b4": 1,
        "millisecond": 1,
        "interv": 1,
        "ar": [1, 4, 5],
        "an": [1, 2, 3, 4],
        "phi": [1, 2, 6],
        "angl": [1, 2],
        "radian": 1,
        "pulse_magnitud": [1, 6],
        "gradient": [1, 4],
        "mt": 1,
        "m": [1, 4],
        "assum": [1, 4],
        "\u03b3\u00b2": 1,
        "g\u00b2": 1,
        "\u03b4\u00b2": 1,
        "theta": [1, 2, 6],
        "write_bv": [1, 6],
        "file": 1,
        "byte": 1,
        "pathlik": 1,
        "write": 1,
        "fsl": 1,
        "_": 1,
        "dwi": 1,
        "bval": 1,
        "write_bvec": [1, 6],
        "bvec": 1,
        "echoschem": [1, 6],
        "te": 1,
        "For": [1, 4],
        "without": [1, 5],
        "inversionrecoveryacquisitionschem": [1, 5, 6],
        "repetition_tim": [1, 6],
        "inversion_tim": [1, 6],
        "invers": 1,
        "recoveri": 1,
        "repetit": 1,
        "time": 1,
        "tr": 1,
        "echo": 1,
        "ti": 1,
        "reduceddiffusionschem": [1, 6],
        "analyticbal": [1, 6],
        "lambda_iso": 1,
        "dmipytissuemodel": [1, 5, 6],
        "quick": [1, 2],
        "dirti": 1,
        "inherit": 1,
        "dmipytissu": 1,
        "model": [1, 2, 3, 4, 5],
        "purpos": [1, 2],
        "test": [1, 2],
        "finit": 1,
        "differ": [1, 2, 4, 5],
        "jacobian_analyt": [1, 6],
        "cascadefitdmipi": [1, 6],
        "complex_model": 1,
        "simple_model": 1,
        "parameter_map": 1,
        "tissuemodeldecor": [1, 6],
        "decor": 1,
        "add": [1, 2],
        "fit": [1, 3, 6],
        "befor": 1,
        "initi": [1, 4],
        "more": [1, 4],
        "complex": 1,
        "signal": [1, 4],
        "fit_opt": [1, 3],
        "tissu": [1, 3, 4],
        "noisy_sign": 1,
        "data": [1, 3],
        "given": [1, 2, 3, 4],
        "noisi": 1,
        "under": 1,
        "investig": 1,
        "fittedtissuemodel": 1,
        "multicompartmentmodel": [1, 5],
        "volume_fract": [1, 6],
        "tissuemodel": [1, 3, 4, 5, 6],
        "wrapper": 1,
        "multicompart": 1,
        "note": [1, 4],
        "otherwis": [1, 3],
        "error": [1, 2, 3],
        "dmipy_model": [1, 6],
        "dmipy_parameters2microtool_paramet": [1, 6],
        "dmipy_par": 1,
        "convert": 1,
        "compat": [1, 3, 4],
        "fitteddmipymodel": [1, 6],
        "set_fit_paramet": [1, 6],
        "flag": 1,
        "form": [1, 2],
        "set_initial_paramet": [1, 6],
        "guess": 1,
        "_model": 1,
        "work": [1, 2],
        "import": [1, 3],
        "call": [1, 4],
        "format": [1, 3],
        "accord": [1, 2],
        "set_parameters_from_vector": [1, 6],
        "new_parameter_valu": 1,
        "probabl": [1, 4],
        "overwrit": 1,
        "wrap": [1, 4],
        "dmipymodel": 1,
        "dmipyfitresult": 1,
        "fittedmulticompartmentmodel": 1,
        "fittedmodel": [1, 6],
        "fitted_paramet": [1, 6],
        "print_fit_inform": [1, 6],
        "compute_compartment_sign": [1, 6],
        "dmipy_schem": 1,
        "dmipyacquisitionschem": [1, 5],
        "n_measur": 1,
        "n_model": 1,
        "convert_diffusion_scheme2dmipy_schem": [1, 6],
        "take": [1, 2, 4],
        "toolbox": 1,
        "It": 1,
        "si": 1,
        "therefor": 1,
        "we": [1, 2, 3, 4, 5],
        "addition": 1,
        "convers": 1,
        "lose": 1,
        "due": 1,
        "fact": 1,
        "ha": [1, 2],
        "notion": 1,
        "constrain": 1,
        "shell": [1, 2, 5],
        "relax": 1,
        "approach": 1,
        "convert_dmipy_scheme2diffusion_schem": [1, 6],
        "sinc": 1,
        "non": 1,
        "scanner": 1,
        "get_paramet": [1, 6],
        "multi_model": 1,
        "compil": 1,
        "present": 1,
        "multi": 1,
        "compart": 1,
        "These": 1,
        "link": 1,
        "get_scaled_bound": [1, 6],
        "dmipy_bound": 1,
        "back": 1,
        "t_rise": [1, 6],
        "kind": 1,
        "softwar": 1,
        "In": 1,
        "respons": 1,
        "first": 1,
        "translat": 1,
        "one": [1, 4],
        "exponentialtissuemodel": [1, 6],
        "t2": 1,
        "s0": 1,
        "fittedmodelcurvefit": [1, 6],
        "jacobian": [1, 4, 6],
        "analyt": [1, 5],
        "wai": 1,
        "comput": [1, 2, 4],
        "curve_fit_result": 1,
        "fittedmodelminim": [1, 6],
        "result": [1, 3, 4],
        "optimizeresult": [1, 4],
        "multitissuemodel": [1, 6],
        "callabl": [1, 4],
        "trust": 1,
        "constr": 1,
        "fit_constraint": [1, 6],
        "relaxationtissuemodel": [1, 6],
        "t1": 1,
        "its": 1,
        "longitudin": 1,
        "transvers": 1,
        "fulli": 1,
        "recov": 1,
        "magnetis": 1,
        "just": [1, 2, 4],
        "90": 1,
        "rf": 1,
        "calcul": [1, 4],
        "attenu": [1, 4],
        "where": [1, 2, 4],
        "sampl": [1, 2, 4],
        "relaxedisotropicmodel": [1, 6],
        "relaxedmultitissuemodel": [1, 6],
        "relaxation_tim": [1, 6],
        "fit_bounds_al": [1, 6],
        "fit_initial_guess": [1, 6],
        "get_fit_paramet": [1, 6],
        "include_fit": [1, 6],
        "include_optim": [1, 6],
        "parameter_nam": [1, 6],
        "parameter_vector": [1, 6],
        "print_comparison": [1, 6],
        "other": [1, 2, 4],
        "compar": 1,
        "two": [1, 2],
        "scaled_jacobian": [1, 6],
        "origin": 1,
        "pass": [1, 4],
        "public": 1,
        "overrid": 1,
        "extend": 1,
        "alter": 1,
        "while": 1,
        "retain": 1,
        "interfac": 1,
        "concept": 1,
        "design": 1,
        "pattern": 1,
        "can": [1, 2, 4],
        "found": [1, 5],
        "http": [1, 4, 5],
        "refactor": 1,
        "guru": 1,
        "fit_flag": [1, 6],
        "fit_bound": [1, 6],
        "inf": 1,
        "scalar": [1, 2, 4],
        "includ": [1, 3],
        "If": 1,
        "dont": 1,
        "known": 1,
        "exclud": 1,
        "well": [1, 4],
        "process": [1, 3],
        "specifici": 1,
        "domain": [1, 2, 5],
        "attempt": 1,
        "fit_cost": [1, 6],
        "fit_parameter_vector": 1,
        "fit_residu": [1, 6],
        "insert_relaxation_tim": [1, 6],
        "insert": 1,
        "organis": 2,
        "electrostat": 2,
        "follow": [2, 4, 5],
        "paper": 2,
        "doi": [2, 4],
        "10": [2, 4],
        "1002": [2, 4],
        "mrm": [2, 4],
        "24736": 2,
        "energi": 2,
        "each": 2,
        "individu": [2, 4],
        "entri": 2,
        "repres": 2,
        "q": 2,
        "cost": 2,
        "pairwis": 2,
        "them": 2,
        "penal": 2,
        "similar": 2,
        "orient": 2,
        "associ": [2, 4],
        "configur": 2,
        "n_shell": 2,
        "alpha": 2,
        "5": 2,
        "flat": 2,
        "rel": 2,
        "weight": 2,
        "inter": 2,
        "intra": 2,
        "reorgan": 2,
        "structur": 2,
        "store": 2,
        "seper": 2,
        "per": 2,
        "sphere": 2,
        "rigid": 2,
        "rotat": 2,
        "24717": 2,
        "vec_shel": 2,
        "make": [2, 3, 5],
        "backproject": 2,
        "flattend": 2,
        "word": 2,
        "polar": 2,
        "azimuth": 2,
        "total": 2,
        "respect": 2,
        "everi": 2,
        "n_vec": 2,
        "see": [2, 3, 4, 5],
        "point": 2,
        "charg": 2,
        "system": 2,
        "100": [2, 5],
        "minim": [2, 4],
        "gener": 2,
        "keep": 2,
        "lookup": 2,
        "tabl": 2,
        "mean": [2, 3],
        "been": 2,
        "previous": 2,
        "load": 2,
        "disk": 2,
        "helper": [2, 3, 5],
        "spheric": 2,
        "n_angl": 2,
        "n_vector": 2,
        "incorrect": 2,
        "uniti": 2,
        "standard": 2,
        "f": 2,
        "equal": 2,
        "inequ": 2,
        "output": [2, 4, 5],
        "1d": 2,
        "r": [2, 3],
        "some": 2,
        "vec": 2,
        "figur": [2, 3, 5],
        "ax": [2, 3],
        "collect": 2,
        "matplotlib": [2, 5],
        "displai": 2,
        "plt": 2,
        "show": 2,
        "titl": [2, 5],
        "num": 2,
        "random": 2,
        "term": [2, 4, 5],
        "potenti": 2,
        "give": 2,
        "pi": 2,
        "dimens": 2,
        "result_directori": 3,
        "path": [3, 4, 5],
        "category_nam": 3,
        "subfold": 3,
        "directori": 3,
        "catergory_nam": 3,
        "subsequ": 3,
        "folder": 3,
        "subdirectori": 3,
        "creat": 3,
        "plotsubdir": 3,
        "datasubdir": 3,
        "datafram": 3,
        "nest": 3,
        "gaussian": [3, 4],
        "df": 3,
        "std": 3,
        "index_nam": 3,
        "panda": 3,
        "mc_result": 3,
        "gt_model": 3,
        "gaussian_fit": 3,
        "color": 3,
        "fig_label": 3,
        "distribut": [3, 4],
        "hist_label": 3,
        "parameter_dst": 3,
        "draw_gt": 3,
        "montecarlo": 3,
        "groundtruth": 3,
        "map": 3,
        "anoth": 3,
        "mont": 3,
        "carlo": 3,
        "ground_truth": 3,
        "ground": 3,
        "truth": 3,
        "w": 3,
        "t": 3,
        "involv": 3,
        "how": 3,
        "nois": [3, 4],
        "affect": 3,
        "estim": 3,
        "alwai": 3,
        "execut": [3, 4],
        "insid": 3,
        "claus": 3,
        "parralel": 3,
        "throw": 3,
        "cryptic": 3,
        "noise_distribut": 3,
        "rv_continuous_frozen": 3,
        "n_sim": 3,
        "datadir": 3,
        "model_nam": 3,
        "scheme_nam": 3,
        "option": [3, 4],
        "routin": [3, 4],
        "rv_continu": 3,
        "information_func": 4,
        "crlb": 4,
        "loss": [4, 5],
        "bass": 4,
        "made": 4,
        "becaus": 4,
        "fisher": 4,
        "ensur": 4,
        "deriv": 4,
        "abstractmethod": 4,
        "static": 4,
        "cramer": 4,
        "roa": 4,
        "condit": 4,
        "eigenvalu": 4,
        "proof": 4,
        "appendix": 4,
        "invert": 4,
        "signatur": 4,
        "constant": [4, 5, 6],
        "noise_var": [4, 5],
        "know": [4, 5],
        "factor": 4,
        "jac": 4,
        "sum": 4,
        "matric": 4,
        "squar": 4,
        "varianc": 4,
        "equat": [4, 5],
        "a2": [4, 5],
        "alexand": [4, 5],
        "2008": [4, 5],
        "21646": 4,
        "rician": 4,
        "integr": 4,
        "approxim": 4,
        "up": 4,
        "report": 4,
        "org": 4,
        "1109": 4,
        "tit": 4,
        "1967": 4,
        "1054037": 4,
        "noise_vari": 4,
        "scaling_factor": 4,
        "api": 4,
        "acquisiton": 4,
        "abov": 4,
        "howev": 4,
        "decid": 4,
        "do": [4, 5],
        "futur": 4,
        "sz": 4,
        "fun": 4,
        "arg": 4,
        "max_ev": 4,
        "algorithm": 4,
        "path_length": 4,
        "n_jump": 4,
        "prt": 4,
        "singl": 4,
        "jump": 4,
        "along": 4,
        "accept": 4,
        "step": 4,
        "population_sz": 4,
        "50": 4,
        "max_migr": 4,
        "200": 4,
        "max_fev": 4,
        "11": 4,
        "classic": 4,
        "__call__": 4,
        "part": 4,
        "control": 4,
        "visit": 4,
        "ivanzelinka": 4,
        "eu": 4,
        "somaalgorithm": 4,
        "about": 4,
        "html": [4, 5],
        "code": 4,
        "sourc": 4,
        "break": 4,
        "microtool_bound": 4,
        "loss_valu": 4,
        "acquisitiontyp": 4,
        "tissue_model": [4, 5, 6],
        "loss_scaling_factor": 4,
        "differential_evolut": 4,
        "solver_opt": 4,
        "refer": 4,
        "want": [4, 5],
        "notic": 4,
        "extrem": 4,
        "solver": 4,
        "document": 4,
        "what": 4,
        "done": 4,
        "handl": 5,
        "input": 5,
        "silenc": 5,
        "print": 5,
        "statement": 5,
        "whatev": 5,
        "ani": 5,
        "obj": 5,
        "acquisition_schem": [5, 6],
        "n_sampl": 5,
        "close": 5,
        "minimum": 5,
        "inspect": 5,
        "out": 5,
        "argument": 5,
        "incompat": 5,
        "label": 5,
        "subplot": 5,
        "fig_titl": 5,
        "fig": 5,
        "setup": 5,
        "et": 5,
        "al": 5,
        "etal": 5,
        "n_puls": 5,
        "decent": 5,
        "ir": 5,
        "express": 5,
        "were": 5,
        "scanner_paramet": [5, 6],
        "delta": 5,
        "a1": 5,
        "a0": 5,
        "largest": 5,
        "real": 5,
        "root": 5,
        "cubic": 5,
        "z": 5,
        "a_2": 5,
        "a_1": 5,
        "a_0": 5,
        "mathworld": 5,
        "wolfram": 5,
        "com": 5,
        "cubicformula": 5,
        "detail": 5,
        "solv": 5,
        "coeffici": 5,
        "quadrat": 5,
        "linear": 5,
        "offset": 5,
        "n_paramet": 5,
        "packag": 6,
        "subpackag": 6,
        "submodul": 6,
        "dmipi": 6,
        "misst": 6
    },
    "objects": {
        "": [[1, 0, 0, "-", "microtool"]],
        "microtool": [[1, 0, 0, "-", "acquisition_scheme"], [1, 0, 0, "-", "constants"], [1, 0, 0, "-", "dmipy"], [2, 0, 0, "-", "gradient_sampling"], [3, 0, 0, "-", "monte_carlo"], [4, 0, 0, "-", "optimize"], [1, 0, 0, "-", "scanner_parameters"], [1, 0, 0, "-", "tissue_model"], [5, 0, 0, "-", "utils"]],
        "microtool.acquisition_scheme": [[1, 1, 1, "", "AcquisitionParameters"], [1, 1, 1, "", "AcquisitionScheme"], [1, 1, 1, "", "DiffusionAcquisitionScheme"], [1, 1, 1, "", "EchoScheme"], [1, 1, 1, "", "InversionRecoveryAcquisitionScheme"], [1, 1, 1, "", "ReducedDiffusionScheme"]],
        "microtool.acquisition_scheme.AcquisitionParameters": [[1, 2, 1, "", "free_values"], [1, 2, 1, "", "optimize_mask"], [1, 3, 1, "", "set_fixed_mask"], [1, 3, 1, "", "set_free_values"]],
        "microtool.acquisition_scheme.AcquisitionScheme": [[1, 2, 1, "", "constraints"], [1, 2, 1, "", "free_parameter_bounds_scaled"], [1, 2, 1, "", "free_parameter_keys"], [1, 2, 1, "", "free_parameter_scales"], [1, 2, 1, "", "free_parameter_vector"], [1, 2, 1, "", "free_parameters"], [1, 3, 1, "", "get_free_parameter_idx"], [1, 3, 1, "", "get_parameter_from_parameter_vector"], [1, 2, 1, "", "pulse_count"], [1, 3, 1, "", "set_free_parameter_bounds"], [1, 3, 1, "", "set_free_parameter_vector"]],
        "microtool.acquisition_scheme.DiffusionAcquisitionScheme": [[1, 2, 1, "", "b_values"], [1, 2, 1, "", "b_vectors"], [1, 2, 1, "", "constraints"], [1, 2, 1, "", "echo_times"], [1, 2, 1, "", "phi"], [1, 2, 1, "", "pulse_intervals"], [1, 2, 1, "", "pulse_magnitude"], [1, 2, 1, "", "pulse_widths"], [1, 2, 1, "", "theta"], [1, 3, 1, "", "write_bval"], [1, 3, 1, "", "write_bvec"]],
        "microtool.acquisition_scheme.EchoScheme": [[1, 2, 1, "", "constraints"], [1, 2, 1, "", "echo_times"]],
        "microtool.acquisition_scheme.InversionRecoveryAcquisitionScheme": [[1, 2, 1, "", "constraints"], [1, 2, 1, "", "echo_times"], [1, 2, 1, "", "inversion_times"], [1, 2, 1, "", "repetition_times"]],
        "microtool.acquisition_scheme.ReducedDiffusionScheme": [[1, 2, 1, "", "b_values"], [1, 2, 1, "", "constraints"], [1, 2, 1, "", "echo_times"]],
        "microtool.dmipy": [[1, 1, 1, "", "AnalyticBall"], [1, 1, 1, "", "CascadeFitDmipy"], [1, 1, 1, "", "DmipyTissueModel"], [1, 1, 1, "", "FittedDmipyModel"], [1, 4, 1, "", "compute_compartment_signals"], [1, 4, 1, "", "convert_diffusion_scheme2dmipy_scheme"], [1, 4, 1, "", "convert_dmipy_scheme2diffusion_scheme"], [1, 4, 1, "", "get_parameters"], [1, 4, 1, "", "get_scaled_bounds"]],
        "microtool.dmipy.AnalyticBall": [[1, 3, 1, "", "jacobian_analytic"]],
        "microtool.dmipy.CascadeFitDmipy": [[1, 3, 1, "", "fit"]],
        "microtool.dmipy.DmipyTissueModel": [[1, 2, 1, "", "dmipy_model"], [1, 3, 1, "", "dmipy_parameters2microtool_parameters"], [1, 3, 1, "", "fit"], [1, 3, 1, "", "set_fit_parameters"], [1, 3, 1, "", "set_initial_parameters"], [1, 3, 1, "", "set_parameters_from_vector"]],
        "microtool.dmipy.FittedDmipyModel": [[1, 2, 1, "", "fitted_parameters"], [1, 2, 1, "", "print_fit_information"]],
        "microtool.gradient_sampling": [[2, 0, 0, "-", "shell_electrostatic"], [2, 0, 0, "-", "shell_rigid_rotation"], [2, 0, 0, "-", "uniform"], [2, 0, 0, "-", "utils"]],
        "microtool.gradient_sampling.shell_electrostatic": [[2, 4, 1, "", "cost_inter_shell"], [2, 4, 1, "", "cost_intra_shell"], [2, 4, 1, "", "cost_scipy"], [2, 4, 1, "", "repack_shells"], [2, 4, 1, "", "sample_shells_electrostatic"], [2, 4, 1, "", "test_shells"]],
        "microtool.gradient_sampling.shell_rigid_rotation": [[2, 4, 1, "", "cost_scipy"], [2, 4, 1, "", "main"], [2, 4, 1, "", "rotate_shells"], [2, 4, 1, "", "rotate_vectors"], [2, 4, 1, "", "sample_shells_rotation"], [2, 4, 1, "", "verify_rotation"]],
        "microtool.gradient_sampling.uniform": [[2, 4, 1, "", "cost_fun"], [2, 4, 1, "", "sample_uniform"], [2, 4, 1, "", "test_uniform"]],
        "microtool.gradient_sampling.utils": [[2, 4, 1, "", "angles_to_unitvectors"], [2, 4, 1, "", "constraint_function"], [2, 4, 1, "", "get_constraints"], [2, 4, 1, "", "make_sphere"], [2, 4, 1, "", "normalize"], [2, 4, 1, "", "plot_shells"], [2, 4, 1, "", "plot_shells_projected"], [2, 4, 1, "", "plot_vectors"], [2, 4, 1, "", "sample_sphere_angles"], [2, 4, 1, "", "sample_sphere_vectors"], [2, 4, 1, "", "total_potential"], [2, 4, 1, "", "unitvector_to_angles"]],
        "microtool.monte_carlo": [[3, 0, 0, "-", "IO"], [3, 0, 0, "-", "parameter_distributions"], [3, 0, 0, "-", "simulation"]],
        "microtool.monte_carlo.IO": [[3, 4, 1, "", "make_result_dirs"]],
        "microtool.monte_carlo.parameter_distributions": [[3, 4, 1, "", "fit_gaussian"], [3, 4, 1, "", "plot_dataframe_index"], [3, 4, 1, "", "plot_parameter_distributions"], [3, 4, 1, "", "scale"]],
        "microtool.monte_carlo.simulation": [[3, 1, 1, "", "MonteCarloSimulation"]],
        "microtool.monte_carlo.simulation.MonteCarloSimulation": [[3, 3, 1, "", "run"], [3, 3, 1, "", "save"], [3, 3, 1, "", "set_fitting_options"], [3, 3, 1, "", "set_model"], [3, 3, 1, "", "set_n_sim"], [3, 3, 1, "", "set_noise_distribution"], [3, 3, 1, "", "set_scheme"]],
        "microtool.optimize": [[4, 0, 0, "-", "loss_functions"], [4, 0, 0, "-", "methods"], [4, 0, 0, "-", "optimize"], [4, 0, 0, "-", "utils"]],
        "microtool.optimize.loss_functions": [[4, 1, 1, "", "CrlbBase"], [4, 1, 1, "", "CrlbEigenvalues"], [4, 1, 1, "", "CrlbInversion"], [4, 1, 1, "", "LossFunction"], [4, 4, 1, "", "compute_loss"], [4, 4, 1, "", "fisher_information_gauss"], [4, 4, 1, "", "fisher_information_rice"], [4, 4, 1, "", "scipy_loss"]],
        "microtool.optimize.loss_functions.CrlbBase": [[4, 3, 1, "", "compute_crlb"]],
        "microtool.optimize.loss_functions.CrlbEigenvalues": [[4, 3, 1, "", "compute_crlb"]],
        "microtool.optimize.loss_functions.CrlbInversion": [[4, 3, 1, "", "compute_crlb"]],
        "microtool.optimize.methods": [[4, 1, 1, "", "BruteForce"], [4, 1, 1, "", "Optimizer"], [4, 1, 1, "", "Population"], [4, 1, 1, "", "SOMA"], [4, 4, 1, "", "is_constrained"]],
        "microtool.optimize.methods.Population": [[4, 3, 1, "", "cost_fun"], [4, 3, 1, "", "migrate"]],
        "microtool.optimize.optimize": [[4, 4, 1, "", "bounds_tuple2scipy"], [4, 4, 1, "", "check_degrees_of_freedom"], [4, 4, 1, "", "check_ill_conditioned"], [4, 4, 1, "", "check_insensitive"], [4, 4, 1, "", "optimize_scheme"], [4, 4, 1, "", "warn_early_termination"]],
        "microtool.optimize.utils": [[4, 4, 1, "", "cartesian_product"], [4, 4, 1, "", "diagonal"]],
        "microtool.scanner_parameters": [[1, 1, 1, "", "ScannerParameters"]],
        "microtool.scanner_parameters.ScannerParameters": [[1, 5, 1, "", "G_max"], [1, 5, 1, "", "S_max"], [1, 5, 1, "", "t_180"], [1, 5, 1, "", "t_90"], [1, 5, 1, "", "t_half"], [1, 2, 1, "", "t_rise"]],
        "microtool.tissue_model": [[1, 1, 1, "", "ExponentialTissueModel"], [1, 1, 1, "", "FittedModel"], [1, 1, 1, "", "FittedModelCurveFit"], [1, 1, 1, "", "FittedModelMinimize"], [1, 1, 1, "", "MultiTissueModel"], [1, 1, 1, "", "RelaxationTissueModel"], [1, 1, 1, "", "RelaxedIsotropicModel"], [1, 1, 1, "", "RelaxedMultiTissueModel"], [1, 1, 1, "", "TissueModel"], [1, 1, 1, "", "TissueModelDecorator"], [1, 1, 1, "", "TissueParameter"], [1, 4, 1, "", "fit_cost"], [1, 4, 1, "", "fit_residuals"], [1, 4, 1, "", "insert_relaxation_times"]],
        "microtool.tissue_model.ExponentialTissueModel": [[1, 3, 1, "", "fit"], [1, 3, 1, "", "jacobian"]],
        "microtool.tissue_model.FittedModel": [[1, 2, 1, "", "fitted_parameters"], [1, 3, 1, "", "print_fit_information"]],
        "microtool.tissue_model.FittedModelCurveFit": [[1, 2, 1, "", "fitted_parameters"], [1, 2, 1, "", "print_fit_information"]],
        "microtool.tissue_model.FittedModelMinimize": [[1, 2, 1, "", "fitted_parameters"], [1, 3, 1, "", "print_fit_information"]],
        "microtool.tissue_model.MultiTissueModel": [[1, 3, 1, "", "fit"], [1, 2, 1, "", "fit_constraints"], [1, 3, 1, "", "set_fit_parameters"], [1, 3, 1, "", "set_parameters_from_vector"], [1, 2, 1, "", "volume_fractions"]],
        "microtool.tissue_model.RelaxationTissueModel": [[1, 3, 1, "", "fit"], [1, 3, 1, "", "jacobian"]],
        "microtool.tissue_model.RelaxedIsotropicModel": [[1, 3, 1, "", "fit"], [1, 3, 1, "", "jacobian"]],
        "microtool.tissue_model.RelaxedMultiTissueModel": [[1, 2, 1, "", "relaxation_times"]],
        "microtool.tissue_model.TissueModel": [[1, 3, 1, "", "fit"], [1, 2, 1, "", "fit_bounds_all"], [1, 2, 1, "", "fit_initial_guess"], [1, 3, 1, "", "get_fit_parameters"], [1, 2, 1, "", "include_fit"], [1, 2, 1, "", "include_optimize"], [1, 3, 1, "", "jacobian"], [1, 2, 1, "", "parameter_names"], [1, 2, 1, "", "parameter_vector"], [1, 2, 1, "", "parameters"], [1, 3, 1, "", "print_comparison"], [1, 3, 1, "", "scaled_jacobian"], [1, 2, 1, "", "scales"], [1, 3, 1, "", "set_fit_parameters"], [1, 3, 1, "", "set_parameters_from_vector"]],
        "microtool.tissue_model.TissueModelDecorator": [[1, 3, 1, "", "fit"], [1, 2, 1, "", "include_optimize"], [1, 3, 1, "", "jacobian"], [1, 2, 1, "", "parameter_names"], [1, 2, 1, "", "parameter_vector"], [1, 2, 1, "", "parameters"], [1, 2, 1, "", "scales"]],
        "microtool.tissue_model.TissueParameter": [[1, 5, 1, "", "fit_bounds"], [1, 5, 1, "", "fit_flag"], [1, 5, 1, "", "optimize"], [1, 5, 1, "", "scale"], [1, 5, 1, "", "value"]],
        "microtool.utils": [[5, 0, 0, "-", "IO"], [5, 0, 0, "-", "plotting"], [5, 0, 0, "-", "saved_models"], [5, 0, 0, "-", "saved_schemes"], [5, 0, 0, "-", "solve_echo_time"]],
        "microtool.utils.IO": [[5, 1, 1, "", "HiddenPrints"], [5, 4, 1, "", "get_pickle"], [5, 4, 1, "", "save_pickle"]],
        "microtool.utils.plotting": [[5, 1, 1, "", "LossInspector"], [5, 4, 1, "", "plot_acquisition_parameters"], [5, 4, 1, "", "plot_signal"]],
        "microtool.utils.plotting.LossInspector": [[5, 3, 1, "", "compute_loss"], [5, 3, 1, "", "plot"]],
        "microtool.utils.saved_models": [[5, 4, 1, "", "cylinder_zeppelin"], [5, 4, 1, "", "cylinder_zeppelin_naked"], [5, 4, 1, "", "stick"], [5, 4, 1, "", "stick_naked"], [5, 4, 1, "", "stick_zeppelin"], [5, 4, 1, "", "verdict"]],
        "microtool.utils.saved_schemes": [[5, 4, 1, "", "alexander2008"], [5, 4, 1, "", "alexander2008_optimized_directions"], [5, 4, 1, "", "ir_scheme_increasing_parameters"], [5, 4, 1, "", "ir_scheme_repeated_parameters"]],
        "microtool.utils.solve_echo_time": [[5, 4, 1, "", "compute_delta_max"], [5, 4, 1, "", "echo_time"], [5, 4, 1, "", "largest_real_cbrt"], [5, 4, 1, "", "main"], [5, 4, 1, "", "minimal_echo_time"]]
    },
    "objtypes": {
        "0": "py:module",
        "1": "py:class",
        "2": "py:property",
        "3": "py:method",
        "4": "py:function",
        "5": "py:attribute"
    },
    "objnames": {
        "0": ["py", "module", "Python module"],
        "1": ["py", "class", "Python class"],
        "2": ["py", "property", "Python property"],
        "3": ["py", "method", "Python method"],
        "4": ["py", "function", "Python function"],
        "5": ["py", "attribute", "Python attribute"]
    },
    "titleterms": {
        "welcom": 0,
        "microtool": [0, 1, 2, 3, 4, 5, 6, 7],
        "": 0,
        "document": 0,
        "indic": 0,
        "tabl": 0,
        "packag": [1, 2, 3, 4, 5],
        "subpackag": 1,
        "submodul": [1, 2, 3, 4, 5],
        "acquisition_schem": 1,
        "modul": [1, 2, 3, 4, 5],
        "constant": 1,
        "dmipi": 1,
        "misst": 1,
        "scanner_paramet": 1,
        "tissue_model": 1,
        "gradient_sampl": 2,
        "shell_electrostat": 2,
        "shell_rigid_rot": 2,
        "uniform": 2,
        "util": [2, 4, 5],
        "monte_carlo": 3,
        "io": [3, 5],
        "parameter_distribut": 3,
        "simul": 3,
        "optim": 4,
        "loss_funct": 4,
        "method": 4,
        "plot": 5,
        "saved_model": 5,
        "saved_schem": 5,
        "solve_echo_tim": 5
    },
    "envversion": {
        "sphinx.domains.c": 2,
        "sphinx.domains.changeset": 1,
        "sphinx.domains.citation": 1,
        "sphinx.domains.cpp": 8,
        "sphinx.domains.index": 1,
        "sphinx.domains.javascript": 2,
        "sphinx.domains.math": 2,
        "sphinx.domains.python": 3,
        "sphinx.domains.rst": 2,
        "sphinx.domains.std": 2,
        "sphinx": 57
    },
    "alltitles": {
        "Welcome to MICROtool\u2019s documentation!": [[0, "welcome-to-microtool-s-documentation"]],
        "Indices and tables": [[0, "indices-and-tables"]],
        "microtool package": [[1, "module-microtool"]],
        "Subpackages": [[1, "subpackages"]],
        "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"]],
        "microtool.acquisition_scheme module": [[1, "module-microtool.acquisition_scheme"]],
        "microtool.constants module": [[1, "module-microtool.constants"]],
        "microtool.dmipy module": [[1, "module-microtool.dmipy"]],
        "microtool.misst module": [[1, "microtool-misst-module"]],
        "microtool.scanner_parameters module": [[1, "module-microtool.scanner_parameters"]],
        "microtool.tissue_model module": [[1, "module-microtool.tissue_model"]],
        "microtool.gradient_sampling package": [[2, "module-microtool.gradient_sampling"]],
        "microtool.gradient_sampling.shell_electrostatic module": [[2, "module-microtool.gradient_sampling.shell_electrostatic"]],
        "microtool.gradient_sampling.shell_rigid_rotation module": [[2, "module-microtool.gradient_sampling.shell_rigid_rotation"]],
        "microtool.gradient_sampling.uniform module": [[2, "module-microtool.gradient_sampling.uniform"]],
        "microtool.gradient_sampling.utils module": [[2, "module-microtool.gradient_sampling.utils"]],
        "microtool.monte_carlo package": [[3, "module-microtool.monte_carlo"]],
        "microtool.monte_carlo.IO module": [[3, "module-microtool.monte_carlo.IO"]],
        "microtool.monte_carlo.parameter_distributions module": [[3, "module-microtool.monte_carlo.parameter_distributions"]],
        "microtool.monte_carlo.simulation module": [[3, "module-microtool.monte_carlo.simulation"]],
        "microtool.optimize package": [[4, "module-microtool.optimize"]],
        "microtool.optimize.loss_functions module": [[4, "module-microtool.optimize.loss_functions"]],
        "microtool.optimize.methods module": [[4, "module-microtool.optimize.methods"]],
        "microtool.optimize.optimize module": [[4, "module-microtool.optimize.optimize"]],
        "microtool.optimize.utils module": [[4, "module-microtool.optimize.utils"]],
        "microtool.utils package": [[5, "module-microtool.utils"]],
        "microtool.utils.IO module": [[5, "module-microtool.utils.IO"]],
        "microtool.utils.plotting module": [[5, "module-microtool.utils.plotting"]],
        "microtool.utils.saved_models module": [[5, "module-microtool.utils.saved_models"]],
        "microtool.utils.saved_schemes module": [[5, "module-microtool.utils.saved_schemes"]],
        "microtool.utils.solve_echo_time module": [[5, "module-microtool.utils.solve_echo_time"]],
        "microtool": [[6, "microtool"], [7, "microtool"]]
    },
    "indexentries": {
        "acquisitionparameters (class in microtool.acquisition_scheme)": [[1, "microtool.acquisition_scheme.AcquisitionParameters"]],
        "acquisitionscheme (class in microtool.acquisition_scheme)": [[1, "microtool.acquisition_scheme.AcquisitionScheme"]],
        "analyticball (class in microtool.dmipy)": [[1, "microtool.dmipy.AnalyticBall"]],
        "cascadefitdmipy (class in microtool.dmipy)": [[1, "microtool.dmipy.CascadeFitDmipy"]],
        "diffusionacquisitionscheme (class in microtool.acquisition_scheme)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme"]],
        "dmipytissuemodel (class in microtool.dmipy)": [[1, "microtool.dmipy.DmipyTissueModel"]],
        "echoscheme (class in microtool.acquisition_scheme)": [[1, "microtool.acquisition_scheme.EchoScheme"]],
        "exponentialtissuemodel (class in microtool.tissue_model)": [[1, "microtool.tissue_model.ExponentialTissueModel"]],
        "fitteddmipymodel (class in microtool.dmipy)": [[1, "microtool.dmipy.FittedDmipyModel"]],
        "fittedmodel (class in microtool.tissue_model)": [[1, "microtool.tissue_model.FittedModel"]],
        "fittedmodelcurvefit (class in microtool.tissue_model)": [[1, "microtool.tissue_model.FittedModelCurveFit"]],
        "fittedmodelminimize (class in microtool.tissue_model)": [[1, "microtool.tissue_model.FittedModelMinimize"]],
        "g_max (microtool.scanner_parameters.scannerparameters attribute)": [[1, "microtool.scanner_parameters.ScannerParameters.G_max"]],
        "inversionrecoveryacquisitionscheme (class in microtool.acquisition_scheme)": [[1, "microtool.acquisition_scheme.InversionRecoveryAcquisitionScheme"]],
        "multitissuemodel (class in microtool.tissue_model)": [[1, "microtool.tissue_model.MultiTissueModel"]],
        "reduceddiffusionscheme (class in microtool.acquisition_scheme)": [[1, "microtool.acquisition_scheme.ReducedDiffusionScheme"]],
        "relaxationtissuemodel (class in microtool.tissue_model)": [[1, "microtool.tissue_model.RelaxationTissueModel"]],
        "relaxedisotropicmodel (class in microtool.tissue_model)": [[1, "microtool.tissue_model.RelaxedIsotropicModel"]],
        "relaxedmultitissuemodel (class in microtool.tissue_model)": [[1, "microtool.tissue_model.RelaxedMultiTissueModel"]],
        "s_max (microtool.scanner_parameters.scannerparameters attribute)": [[1, "microtool.scanner_parameters.ScannerParameters.S_max"]],
        "scannerparameters (class in microtool.scanner_parameters)": [[1, "microtool.scanner_parameters.ScannerParameters"]],
        "tissuemodel (class in microtool.tissue_model)": [[1, "microtool.tissue_model.TissueModel"]],
        "tissuemodeldecorator (class in microtool.tissue_model)": [[1, "microtool.tissue_model.TissueModelDecorator"]],
        "tissueparameter (class in microtool.tissue_model)": [[1, "microtool.tissue_model.TissueParameter"]],
        "b_values (microtool.acquisition_scheme.diffusionacquisitionscheme property)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.b_values"]],
        "b_values (microtool.acquisition_scheme.reduceddiffusionscheme property)": [[1, "microtool.acquisition_scheme.ReducedDiffusionScheme.b_values"]],
        "b_vectors (microtool.acquisition_scheme.diffusionacquisitionscheme property)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.b_vectors"]],
        "compute_compartment_signals() (in module microtool.dmipy)": [[1, "microtool.dmipy.compute_compartment_signals"]],
        "constraints (microtool.acquisition_scheme.acquisitionscheme property)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.constraints"]],
        "constraints (microtool.acquisition_scheme.diffusionacquisitionscheme property)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.constraints"]],
        "constraints (microtool.acquisition_scheme.echoscheme property)": [[1, "microtool.acquisition_scheme.EchoScheme.constraints"]],
        "constraints (microtool.acquisition_scheme.inversionrecoveryacquisitionscheme property)": [[1, "microtool.acquisition_scheme.InversionRecoveryAcquisitionScheme.constraints"]],
        "constraints (microtool.acquisition_scheme.reduceddiffusionscheme property)": [[1, "microtool.acquisition_scheme.ReducedDiffusionScheme.constraints"]],
        "convert_diffusion_scheme2dmipy_scheme() (in module microtool.dmipy)": [[1, "microtool.dmipy.convert_diffusion_scheme2dmipy_scheme"]],
        "convert_dmipy_scheme2diffusion_scheme() (in module microtool.dmipy)": [[1, "microtool.dmipy.convert_dmipy_scheme2diffusion_scheme"]],
        "dmipy_model (microtool.dmipy.dmipytissuemodel property)": [[1, "microtool.dmipy.DmipyTissueModel.dmipy_model"]],
        "dmipy_parameters2microtool_parameters() (microtool.dmipy.dmipytissuemodel method)": [[1, "microtool.dmipy.DmipyTissueModel.dmipy_parameters2microtool_parameters"]],
        "echo_times (microtool.acquisition_scheme.diffusionacquisitionscheme property)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.echo_times"]],
        "echo_times (microtool.acquisition_scheme.echoscheme property)": [[1, "microtool.acquisition_scheme.EchoScheme.echo_times"]],
        "echo_times (microtool.acquisition_scheme.inversionrecoveryacquisitionscheme property)": [[1, "microtool.acquisition_scheme.InversionRecoveryAcquisitionScheme.echo_times"]],
        "echo_times (microtool.acquisition_scheme.reduceddiffusionscheme property)": [[1, "microtool.acquisition_scheme.ReducedDiffusionScheme.echo_times"]],
        "fit() (microtool.dmipy.cascadefitdmipy method)": [[1, "microtool.dmipy.CascadeFitDmipy.fit"]],
        "fit() (microtool.dmipy.dmipytissuemodel method)": [[1, "microtool.dmipy.DmipyTissueModel.fit"]],
        "fit() (microtool.tissue_model.exponentialtissuemodel method)": [[1, "microtool.tissue_model.ExponentialTissueModel.fit"]],
        "fit() (microtool.tissue_model.multitissuemodel method)": [[1, "microtool.tissue_model.MultiTissueModel.fit"]],
        "fit() (microtool.tissue_model.relaxationtissuemodel method)": [[1, "microtool.tissue_model.RelaxationTissueModel.fit"]],
        "fit() (microtool.tissue_model.relaxedisotropicmodel method)": [[1, "microtool.tissue_model.RelaxedIsotropicModel.fit"]],
        "fit() (microtool.tissue_model.tissuemodel method)": [[1, "microtool.tissue_model.TissueModel.fit"]],
        "fit() (microtool.tissue_model.tissuemodeldecorator method)": [[1, "microtool.tissue_model.TissueModelDecorator.fit"]],
        "fit_bounds (microtool.tissue_model.tissueparameter attribute)": [[1, "microtool.tissue_model.TissueParameter.fit_bounds"]],
        "fit_bounds_all (microtool.tissue_model.tissuemodel property)": [[1, "microtool.tissue_model.TissueModel.fit_bounds_all"]],
        "fit_constraints (microtool.tissue_model.multitissuemodel property)": [[1, "microtool.tissue_model.MultiTissueModel.fit_constraints"]],
        "fit_cost() (in module microtool.tissue_model)": [[1, "microtool.tissue_model.fit_cost"]],
        "fit_flag (microtool.tissue_model.tissueparameter attribute)": [[1, "microtool.tissue_model.TissueParameter.fit_flag"]],
        "fit_initial_guess (microtool.tissue_model.tissuemodel property)": [[1, "microtool.tissue_model.TissueModel.fit_initial_guess"]],
        "fit_residuals() (in module microtool.tissue_model)": [[1, "microtool.tissue_model.fit_residuals"]],
        "fitted_parameters (microtool.dmipy.fitteddmipymodel property)": [[1, "microtool.dmipy.FittedDmipyModel.fitted_parameters"]],
        "fitted_parameters (microtool.tissue_model.fittedmodel property)": [[1, "microtool.tissue_model.FittedModel.fitted_parameters"]],
        "fitted_parameters (microtool.tissue_model.fittedmodelcurvefit property)": [[1, "microtool.tissue_model.FittedModelCurveFit.fitted_parameters"]],
        "fitted_parameters (microtool.tissue_model.fittedmodelminimize property)": [[1, "microtool.tissue_model.FittedModelMinimize.fitted_parameters"]],
        "free_parameter_bounds_scaled (microtool.acquisition_scheme.acquisitionscheme property)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.free_parameter_bounds_scaled"]],
        "free_parameter_keys (microtool.acquisition_scheme.acquisitionscheme property)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.free_parameter_keys"]],
        "free_parameter_scales (microtool.acquisition_scheme.acquisitionscheme property)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.free_parameter_scales"]],
        "free_parameter_vector (microtool.acquisition_scheme.acquisitionscheme property)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.free_parameter_vector"]],
        "free_parameters (microtool.acquisition_scheme.acquisitionscheme property)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.free_parameters"]],
        "free_values (microtool.acquisition_scheme.acquisitionparameters property)": [[1, "microtool.acquisition_scheme.AcquisitionParameters.free_values"]],
        "get_fit_parameters() (microtool.tissue_model.tissuemodel method)": [[1, "microtool.tissue_model.TissueModel.get_fit_parameters"]],
        "get_free_parameter_idx() (microtool.acquisition_scheme.acquisitionscheme method)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.get_free_parameter_idx"]],
        "get_parameter_from_parameter_vector() (microtool.acquisition_scheme.acquisitionscheme method)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.get_parameter_from_parameter_vector"]],
        "get_parameters() (in module microtool.dmipy)": [[1, "microtool.dmipy.get_parameters"]],
        "get_scaled_bounds() (in module microtool.dmipy)": [[1, "microtool.dmipy.get_scaled_bounds"]],
        "include_fit (microtool.tissue_model.tissuemodel property)": [[1, "microtool.tissue_model.TissueModel.include_fit"]],
        "include_optimize (microtool.tissue_model.tissuemodel property)": [[1, "microtool.tissue_model.TissueModel.include_optimize"]],
        "include_optimize (microtool.tissue_model.tissuemodeldecorator property)": [[1, "microtool.tissue_model.TissueModelDecorator.include_optimize"]],
        "insert_relaxation_times() (in module microtool.tissue_model)": [[1, "microtool.tissue_model.insert_relaxation_times"]],
        "inversion_times (microtool.acquisition_scheme.inversionrecoveryacquisitionscheme property)": [[1, "microtool.acquisition_scheme.InversionRecoveryAcquisitionScheme.inversion_times"]],
        "jacobian() (microtool.tissue_model.exponentialtissuemodel method)": [[1, "microtool.tissue_model.ExponentialTissueModel.jacobian"]],
        "jacobian() (microtool.tissue_model.relaxationtissuemodel method)": [[1, "microtool.tissue_model.RelaxationTissueModel.jacobian"]],
        "jacobian() (microtool.tissue_model.relaxedisotropicmodel method)": [[1, "microtool.tissue_model.RelaxedIsotropicModel.jacobian"]],
        "jacobian() (microtool.tissue_model.tissuemodel method)": [[1, "microtool.tissue_model.TissueModel.jacobian"]],
        "jacobian() (microtool.tissue_model.tissuemodeldecorator method)": [[1, "microtool.tissue_model.TissueModelDecorator.jacobian"]],
        "jacobian_analytic() (microtool.dmipy.analyticball method)": [[1, "microtool.dmipy.AnalyticBall.jacobian_analytic"]],
        "microtool": [[1, "module-microtool"]],
        "microtool.acquisition_scheme": [[1, "module-microtool.acquisition_scheme"]],
        "microtool.constants": [[1, "module-microtool.constants"]],
        "microtool.dmipy": [[1, "module-microtool.dmipy"]],
        "microtool.scanner_parameters": [[1, "module-microtool.scanner_parameters"]],
        "microtool.tissue_model": [[1, "module-microtool.tissue_model"]],
        "module": [[1, "module-microtool"], [1, "module-microtool.acquisition_scheme"], [1, "module-microtool.constants"], [1, "module-microtool.dmipy"], [1, "module-microtool.scanner_parameters"], [1, "module-microtool.tissue_model"], [2, "module-microtool.gradient_sampling"], [2, "module-microtool.gradient_sampling.shell_electrostatic"], [2, "module-microtool.gradient_sampling.shell_rigid_rotation"], [2, "module-microtool.gradient_sampling.uniform"], [2, "module-microtool.gradient_sampling.utils"], [3, "module-microtool.monte_carlo"], [3, "module-microtool.monte_carlo.IO"], [3, "module-microtool.monte_carlo.parameter_distributions"], [3, "module-microtool.monte_carlo.simulation"], [4, "module-microtool.optimize"], [4, "module-microtool.optimize.loss_functions"], [4, "module-microtool.optimize.methods"], [4, "module-microtool.optimize.optimize"], [4, "module-microtool.optimize.utils"], [5, "module-microtool.utils"], [5, "module-microtool.utils.IO"], [5, "module-microtool.utils.plotting"], [5, "module-microtool.utils.saved_models"], [5, "module-microtool.utils.saved_schemes"], [5, "module-microtool.utils.solve_echo_time"]],
        "optimize (microtool.tissue_model.tissueparameter attribute)": [[1, "microtool.tissue_model.TissueParameter.optimize"]],
        "optimize_mask (microtool.acquisition_scheme.acquisitionparameters property)": [[1, "microtool.acquisition_scheme.AcquisitionParameters.optimize_mask"]],
        "parameter_names (microtool.tissue_model.tissuemodel property)": [[1, "microtool.tissue_model.TissueModel.parameter_names"]],
        "parameter_names (microtool.tissue_model.tissuemodeldecorator property)": [[1, "microtool.tissue_model.TissueModelDecorator.parameter_names"]],
        "parameter_vector (microtool.tissue_model.tissuemodel property)": [[1, "microtool.tissue_model.TissueModel.parameter_vector"]],
        "parameter_vector (microtool.tissue_model.tissuemodeldecorator property)": [[1, "microtool.tissue_model.TissueModelDecorator.parameter_vector"]],
        "parameters (microtool.tissue_model.tissuemodel property)": [[1, "microtool.tissue_model.TissueModel.parameters"]],
        "parameters (microtool.tissue_model.tissuemodeldecorator property)": [[1, "microtool.tissue_model.TissueModelDecorator.parameters"]],
        "phi (microtool.acquisition_scheme.diffusionacquisitionscheme property)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.phi"]],
        "print_comparison() (microtool.tissue_model.tissuemodel method)": [[1, "microtool.tissue_model.TissueModel.print_comparison"]],
        "print_fit_information (microtool.dmipy.fitteddmipymodel property)": [[1, "microtool.dmipy.FittedDmipyModel.print_fit_information"]],
        "print_fit_information (microtool.tissue_model.fittedmodelcurvefit property)": [[1, "microtool.tissue_model.FittedModelCurveFit.print_fit_information"]],
        "print_fit_information() (microtool.tissue_model.fittedmodel method)": [[1, "microtool.tissue_model.FittedModel.print_fit_information"]],
        "print_fit_information() (microtool.tissue_model.fittedmodelminimize method)": [[1, "microtool.tissue_model.FittedModelMinimize.print_fit_information"]],
        "pulse_count (microtool.acquisition_scheme.acquisitionscheme property)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.pulse_count"]],
        "pulse_intervals (microtool.acquisition_scheme.diffusionacquisitionscheme property)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.pulse_intervals"]],
        "pulse_magnitude (microtool.acquisition_scheme.diffusionacquisitionscheme property)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.pulse_magnitude"]],
        "pulse_widths (microtool.acquisition_scheme.diffusionacquisitionscheme property)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.pulse_widths"]],
        "relaxation_times (microtool.tissue_model.relaxedmultitissuemodel property)": [[1, "microtool.tissue_model.RelaxedMultiTissueModel.relaxation_times"]],
        "repetition_times (microtool.acquisition_scheme.inversionrecoveryacquisitionscheme property)": [[1, "microtool.acquisition_scheme.InversionRecoveryAcquisitionScheme.repetition_times"]],
        "scale (microtool.tissue_model.tissueparameter attribute)": [[1, "microtool.tissue_model.TissueParameter.scale"]],
        "scaled_jacobian() (microtool.tissue_model.tissuemodel method)": [[1, "microtool.tissue_model.TissueModel.scaled_jacobian"]],
        "scales (microtool.tissue_model.tissuemodel property)": [[1, "microtool.tissue_model.TissueModel.scales"]],
        "scales (microtool.tissue_model.tissuemodeldecorator property)": [[1, "microtool.tissue_model.TissueModelDecorator.scales"]],
        "set_fit_parameters() (microtool.dmipy.dmipytissuemodel method)": [[1, "microtool.dmipy.DmipyTissueModel.set_fit_parameters"]],
        "set_fit_parameters() (microtool.tissue_model.multitissuemodel method)": [[1, "microtool.tissue_model.MultiTissueModel.set_fit_parameters"]],
        "set_fit_parameters() (microtool.tissue_model.tissuemodel method)": [[1, "microtool.tissue_model.TissueModel.set_fit_parameters"]],
        "set_fixed_mask() (microtool.acquisition_scheme.acquisitionparameters method)": [[1, "microtool.acquisition_scheme.AcquisitionParameters.set_fixed_mask"]],
        "set_free_parameter_bounds() (microtool.acquisition_scheme.acquisitionscheme method)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.set_free_parameter_bounds"]],
        "set_free_parameter_vector() (microtool.acquisition_scheme.acquisitionscheme method)": [[1, "microtool.acquisition_scheme.AcquisitionScheme.set_free_parameter_vector"]],
        "set_free_values() (microtool.acquisition_scheme.acquisitionparameters method)": [[1, "microtool.acquisition_scheme.AcquisitionParameters.set_free_values"]],
        "set_initial_parameters() (microtool.dmipy.dmipytissuemodel method)": [[1, "microtool.dmipy.DmipyTissueModel.set_initial_parameters"]],
        "set_parameters_from_vector() (microtool.dmipy.dmipytissuemodel method)": [[1, "microtool.dmipy.DmipyTissueModel.set_parameters_from_vector"]],
        "set_parameters_from_vector() (microtool.tissue_model.multitissuemodel method)": [[1, "microtool.tissue_model.MultiTissueModel.set_parameters_from_vector"]],
        "set_parameters_from_vector() (microtool.tissue_model.tissuemodel method)": [[1, "microtool.tissue_model.TissueModel.set_parameters_from_vector"]],
        "t_180 (microtool.scanner_parameters.scannerparameters attribute)": [[1, "microtool.scanner_parameters.ScannerParameters.t_180"]],
        "t_90 (microtool.scanner_parameters.scannerparameters attribute)": [[1, "microtool.scanner_parameters.ScannerParameters.t_90"]],
        "t_half (microtool.scanner_parameters.scannerparameters attribute)": [[1, "microtool.scanner_parameters.ScannerParameters.t_half"]],
        "t_rise (microtool.scanner_parameters.scannerparameters property)": [[1, "microtool.scanner_parameters.ScannerParameters.t_rise"]],
        "theta (microtool.acquisition_scheme.diffusionacquisitionscheme property)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.theta"]],
        "value (microtool.tissue_model.tissueparameter attribute)": [[1, "microtool.tissue_model.TissueParameter.value"]],
        "volume_fractions (microtool.tissue_model.multitissuemodel property)": [[1, "microtool.tissue_model.MultiTissueModel.volume_fractions"]],
        "write_bval() (microtool.acquisition_scheme.diffusionacquisitionscheme method)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.write_bval"]],
        "write_bvec() (microtool.acquisition_scheme.diffusionacquisitionscheme method)": [[1, "microtool.acquisition_scheme.DiffusionAcquisitionScheme.write_bvec"]],
        "angles_to_unitvectors() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.angles_to_unitvectors"]],
        "constraint_function() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.constraint_function"]],
        "cost_fun() (in module microtool.gradient_sampling.uniform)": [[2, "microtool.gradient_sampling.uniform.cost_fun"]],
        "cost_inter_shell() (in module microtool.gradient_sampling.shell_electrostatic)": [[2, "microtool.gradient_sampling.shell_electrostatic.cost_inter_shell"]],
        "cost_intra_shell() (in module microtool.gradient_sampling.shell_electrostatic)": [[2, "microtool.gradient_sampling.shell_electrostatic.cost_intra_shell"]],
        "cost_scipy() (in module microtool.gradient_sampling.shell_electrostatic)": [[2, "microtool.gradient_sampling.shell_electrostatic.cost_scipy"]],
        "cost_scipy() (in module microtool.gradient_sampling.shell_rigid_rotation)": [[2, "microtool.gradient_sampling.shell_rigid_rotation.cost_scipy"]],
        "get_constraints() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.get_constraints"]],
        "main() (in module microtool.gradient_sampling.shell_rigid_rotation)": [[2, "microtool.gradient_sampling.shell_rigid_rotation.main"]],
        "make_sphere() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.make_sphere"]],
        "microtool.gradient_sampling": [[2, "module-microtool.gradient_sampling"]],
        "microtool.gradient_sampling.shell_electrostatic": [[2, "module-microtool.gradient_sampling.shell_electrostatic"]],
        "microtool.gradient_sampling.shell_rigid_rotation": [[2, "module-microtool.gradient_sampling.shell_rigid_rotation"]],
        "microtool.gradient_sampling.uniform": [[2, "module-microtool.gradient_sampling.uniform"]],
        "microtool.gradient_sampling.utils": [[2, "module-microtool.gradient_sampling.utils"]],
        "normalize() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.normalize"]],
        "plot_shells() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.plot_shells"]],
        "plot_shells_projected() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.plot_shells_projected"]],
        "plot_vectors() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.plot_vectors"]],
        "repack_shells() (in module microtool.gradient_sampling.shell_electrostatic)": [[2, "microtool.gradient_sampling.shell_electrostatic.repack_shells"]],
        "rotate_shells() (in module microtool.gradient_sampling.shell_rigid_rotation)": [[2, "microtool.gradient_sampling.shell_rigid_rotation.rotate_shells"]],
        "rotate_vectors() (in module microtool.gradient_sampling.shell_rigid_rotation)": [[2, "microtool.gradient_sampling.shell_rigid_rotation.rotate_vectors"]],
        "sample_shells_electrostatic() (in module microtool.gradient_sampling.shell_electrostatic)": [[2, "microtool.gradient_sampling.shell_electrostatic.sample_shells_electrostatic"]],
        "sample_shells_rotation() (in module microtool.gradient_sampling.shell_rigid_rotation)": [[2, "microtool.gradient_sampling.shell_rigid_rotation.sample_shells_rotation"]],
        "sample_sphere_angles() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.sample_sphere_angles"]],
        "sample_sphere_vectors() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.sample_sphere_vectors"]],
        "sample_uniform() (in module microtool.gradient_sampling.uniform)": [[2, "microtool.gradient_sampling.uniform.sample_uniform"]],
        "test_shells() (in module microtool.gradient_sampling.shell_electrostatic)": [[2, "microtool.gradient_sampling.shell_electrostatic.test_shells"]],
        "test_uniform() (in module microtool.gradient_sampling.uniform)": [[2, "microtool.gradient_sampling.uniform.test_uniform"]],
        "total_potential() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.total_potential"]],
        "unitvector_to_angles() (in module microtool.gradient_sampling.utils)": [[2, "microtool.gradient_sampling.utils.unitvector_to_angles"]],
        "verify_rotation() (in module microtool.gradient_sampling.shell_rigid_rotation)": [[2, "microtool.gradient_sampling.shell_rigid_rotation.verify_rotation"]],
        "montecarlosimulation (class in microtool.monte_carlo.simulation)": [[3, "microtool.monte_carlo.simulation.MonteCarloSimulation"]],
        "fit_gaussian() (in module microtool.monte_carlo.parameter_distributions)": [[3, "microtool.monte_carlo.parameter_distributions.fit_gaussian"]],
        "make_result_dirs() (in module microtool.monte_carlo.io)": [[3, "microtool.monte_carlo.IO.make_result_dirs"]],
        "microtool.monte_carlo": [[3, "module-microtool.monte_carlo"]],
        "microtool.monte_carlo.io": [[3, "module-microtool.monte_carlo.IO"]],
        "microtool.monte_carlo.parameter_distributions": [[3, "module-microtool.monte_carlo.parameter_distributions"]],
        "microtool.monte_carlo.simulation": [[3, "module-microtool.monte_carlo.simulation"]],
        "plot_dataframe_index() (in module microtool.monte_carlo.parameter_distributions)": [[3, "microtool.monte_carlo.parameter_distributions.plot_dataframe_index"]],
        "plot_parameter_distributions() (in module microtool.monte_carlo.parameter_distributions)": [[3, "microtool.monte_carlo.parameter_distributions.plot_parameter_distributions"]],
        "run() (microtool.monte_carlo.simulation.montecarlosimulation method)": [[3, "microtool.monte_carlo.simulation.MonteCarloSimulation.run"]],
        "save() (microtool.monte_carlo.simulation.montecarlosimulation method)": [[3, "microtool.monte_carlo.simulation.MonteCarloSimulation.save"]],
        "scale() (in module microtool.monte_carlo.parameter_distributions)": [[3, "microtool.monte_carlo.parameter_distributions.scale"]],
        "set_fitting_options() (microtool.monte_carlo.simulation.montecarlosimulation method)": [[3, "microtool.monte_carlo.simulation.MonteCarloSimulation.set_fitting_options"]],
        "set_model() (microtool.monte_carlo.simulation.montecarlosimulation method)": [[3, "microtool.monte_carlo.simulation.MonteCarloSimulation.set_model"]],
        "set_n_sim() (microtool.monte_carlo.simulation.montecarlosimulation method)": [[3, "microtool.monte_carlo.simulation.MonteCarloSimulation.set_n_sim"]],
        "set_noise_distribution() (microtool.monte_carlo.simulation.montecarlosimulation method)": [[3, "microtool.monte_carlo.simulation.MonteCarloSimulation.set_noise_distribution"]],
        "set_scheme() (microtool.monte_carlo.simulation.montecarlosimulation method)": [[3, "microtool.monte_carlo.simulation.MonteCarloSimulation.set_scheme"]],
        "bruteforce (class in microtool.optimize.methods)": [[4, "microtool.optimize.methods.BruteForce"]],
        "crlbbase (class in microtool.optimize.loss_functions)": [[4, "microtool.optimize.loss_functions.CrlbBase"]],
        "crlbeigenvalues (class in microtool.optimize.loss_functions)": [[4, "microtool.optimize.loss_functions.CrlbEigenvalues"]],
        "crlbinversion (class in microtool.optimize.loss_functions)": [[4, "microtool.optimize.loss_functions.CrlbInversion"]],
        "lossfunction (class in microtool.optimize.loss_functions)": [[4, "microtool.optimize.loss_functions.LossFunction"]],
        "optimizer (class in microtool.optimize.methods)": [[4, "microtool.optimize.methods.Optimizer"]],
        "population (class in microtool.optimize.methods)": [[4, "microtool.optimize.methods.Population"]],
        "soma (class in microtool.optimize.methods)": [[4, "microtool.optimize.methods.SOMA"]],
        "bounds_tuple2scipy() (in module microtool.optimize.optimize)": [[4, "microtool.optimize.optimize.bounds_tuple2scipy"]],
        "cartesian_product() (in module microtool.optimize.utils)": [[4, "microtool.optimize.utils.cartesian_product"]],
        "check_degrees_of_freedom() (in module microtool.optimize.optimize)": [[4, "microtool.optimize.optimize.check_degrees_of_freedom"]],
        "check_ill_conditioned() (in module microtool.optimize.optimize)": [[4, "microtool.optimize.optimize.check_ill_conditioned"]],
        "check_insensitive() (in module microtool.optimize.optimize)": [[4, "microtool.optimize.optimize.check_insensitive"]],
        "compute_crlb() (microtool.optimize.loss_functions.crlbbase static method)": [[4, "microtool.optimize.loss_functions.CrlbBase.compute_crlb"]],
        "compute_crlb() (microtool.optimize.loss_functions.crlbeigenvalues static method)": [[4, "microtool.optimize.loss_functions.CrlbEigenvalues.compute_crlb"]],
        "compute_crlb() (microtool.optimize.loss_functions.crlbinversion static method)": [[4, "microtool.optimize.loss_functions.CrlbInversion.compute_crlb"]],
        "compute_loss() (in module microtool.optimize.loss_functions)": [[4, "microtool.optimize.loss_functions.compute_loss"]],
        "cost_fun() (microtool.optimize.methods.population method)": [[4, "microtool.optimize.methods.Population.cost_fun"]],
        "diagonal() (in module microtool.optimize.utils)": [[4, "microtool.optimize.utils.diagonal"]],
        "fisher_information_gauss() (in module microtool.optimize.loss_functions)": [[4, "microtool.optimize.loss_functions.fisher_information_gauss"]],
        "fisher_information_rice() (in module microtool.optimize.loss_functions)": [[4, "microtool.optimize.loss_functions.fisher_information_rice"]],
        "is_constrained() (in module microtool.optimize.methods)": [[4, "microtool.optimize.methods.is_constrained"]],
        "microtool.optimize": [[4, "module-microtool.optimize"]],
        "microtool.optimize.loss_functions": [[4, "module-microtool.optimize.loss_functions"]],
        "microtool.optimize.methods": [[4, "module-microtool.optimize.methods"]],
        "microtool.optimize.optimize": [[4, "module-microtool.optimize.optimize"]],
        "microtool.optimize.utils": [[4, "module-microtool.optimize.utils"]],
        "migrate() (microtool.optimize.methods.population method)": [[4, "microtool.optimize.methods.Population.migrate"]],
        "optimize_scheme() (in module microtool.optimize.optimize)": [[4, "microtool.optimize.optimize.optimize_scheme"]],
        "scipy_loss() (in module microtool.optimize.loss_functions)": [[4, "microtool.optimize.loss_functions.scipy_loss"]],
        "warn_early_termination() (in module microtool.optimize.optimize)": [[4, "microtool.optimize.optimize.warn_early_termination"]],
        "hiddenprints (class in microtool.utils.io)": [[5, "microtool.utils.IO.HiddenPrints"]],
        "lossinspector (class in microtool.utils.plotting)": [[5, "microtool.utils.plotting.LossInspector"]],
        "alexander2008() (in module microtool.utils.saved_schemes)": [[5, "microtool.utils.saved_schemes.alexander2008"]],
        "alexander2008_optimized_directions() (in module microtool.utils.saved_schemes)": [[5, "microtool.utils.saved_schemes.alexander2008_optimized_directions"]],
        "compute_delta_max() (in module microtool.utils.solve_echo_time)": [[5, "microtool.utils.solve_echo_time.compute_delta_max"]],
        "compute_loss() (microtool.utils.plotting.lossinspector method)": [[5, "microtool.utils.plotting.LossInspector.compute_loss"]],
        "cylinder_zeppelin() (in module microtool.utils.saved_models)": [[5, "microtool.utils.saved_models.cylinder_zeppelin"]],
        "cylinder_zeppelin_naked() (in module microtool.utils.saved_models)": [[5, "microtool.utils.saved_models.cylinder_zeppelin_naked"]],
        "echo_time() (in module microtool.utils.solve_echo_time)": [[5, "microtool.utils.solve_echo_time.echo_time"]],
        "get_pickle() (in module microtool.utils.io)": [[5, "microtool.utils.IO.get_pickle"]],
        "ir_scheme_increasing_parameters() (in module microtool.utils.saved_schemes)": [[5, "microtool.utils.saved_schemes.ir_scheme_increasing_parameters"]],
        "ir_scheme_repeated_parameters() (in module microtool.utils.saved_schemes)": [[5, "microtool.utils.saved_schemes.ir_scheme_repeated_parameters"]],
        "largest_real_cbrt() (in module microtool.utils.solve_echo_time)": [[5, "microtool.utils.solve_echo_time.largest_real_cbrt"]],
        "main() (in module microtool.utils.solve_echo_time)": [[5, "microtool.utils.solve_echo_time.main"]],
        "microtool.utils": [[5, "module-microtool.utils"]],
        "microtool.utils.io": [[5, "module-microtool.utils.IO"]],
        "microtool.utils.plotting": [[5, "module-microtool.utils.plotting"]],
        "microtool.utils.saved_models": [[5, "module-microtool.utils.saved_models"]],
        "microtool.utils.saved_schemes": [[5, "module-microtool.utils.saved_schemes"]],
        "microtool.utils.solve_echo_time": [[5, "module-microtool.utils.solve_echo_time"]],
        "minimal_echo_time() (in module microtool.utils.solve_echo_time)": [[5, "microtool.utils.solve_echo_time.minimal_echo_time"]],
        "plot() (microtool.utils.plotting.lossinspector method)": [[5, "microtool.utils.plotting.LossInspector.plot"]],
        "plot_acquisition_parameters() (in module microtool.utils.plotting)": [[5, "microtool.utils.plotting.plot_acquisition_parameters"]],
        "plot_signal() (in module microtool.utils.plotting)": [[5, "microtool.utils.plotting.plot_signal"]],
        "save_pickle() (in module microtool.utils.io)": [[5, "microtool.utils.IO.save_pickle"]],
        "stick() (in module microtool.utils.saved_models)": [[5, "microtool.utils.saved_models.stick"]],
        "stick_naked() (in module microtool.utils.saved_models)": [[5, "microtool.utils.saved_models.stick_naked"]],
        "stick_zeppelin() (in module microtool.utils.saved_models)": [[5, "microtool.utils.saved_models.stick_zeppelin"]],
        "verdict() (in module microtool.utils.saved_models)": [[5, "microtool.utils.saved_models.verdict"]]
    }
})